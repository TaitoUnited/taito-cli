{"version":3,"sources":["webpack:///./src/templates/tutorial.js"],"names":["TutorialItemTemplate","data","menuItems","flattenListData","menu","size","weight","dir","map","item","isActive","IS_BROWSER","window","location","pathname","slug","Item","key","id","to","headings","length","value","dangerouslySetInnerHTML","__html","tutorial","html","amount","buttonPosition","buttonIcon","pageQuery"],"mappings":"8FAAA,2OAce,SAASA,EAAT,GAAyC,IAATC,EAAQ,EAARA,KACvCC,EAAYC,YAAgBF,EAAM,QAExC,OACE,YAAC,IAAD,CACEG,KACE,YAAC,IAAD,KACE,YAAC,IAAD,CAAMC,KAAM,GAAIC,OAAQ,KAAxB,YAIA,YAAC,IAAD,CAASC,IAAI,MAEZL,EAAUM,KAAI,SAAAC,GACb,IAAMC,IAAWC,KACbC,OAAOC,SAASC,WAAaL,EAAKM,KAGtC,OACE,YAAC,IAASC,KAAV,CAAeC,IAAKR,EAAKS,GAAIC,GAAIV,EAAKM,KAAML,SAAUA,GACnDD,EAAKW,SAASC,OAAS,EACpBZ,EAAKW,SAAS,GAAGE,MACjB,yBAOd,YAAC,IAAD,MACA,mBAAKC,wBAAyB,CAAEC,OAAQvB,EAAKwB,SAASC,QAEtD,YAAC,IAAD,CAASnB,IAAI,IAAIoB,OAAQ,KAEzB,YAAC,IAAD,MAEA,YAAC,IAAD,CAAQC,eAAe,eAAeC,WAAY,YAAC,IAAD,OAC/C3B,EAAUM,KAAI,SAAAC,GAAI,OACjB,YAAC,IAAOO,KAAR,CAAaC,IAAKR,EAAKS,GAAIC,GAAIV,EAAKM,MACjCN,EAAKW,SAASC,OAAS,EACpBZ,EAAKW,SAAS,GAAGE,MACjB,yBAQT,IAAMQ,EAAS","file":"component---src-templates-tutorial-js-97732ed49196a60f6aa4.js","sourcesContent":["import React from 'react';\nimport { graphql } from 'gatsby';\nimport { FiBookOpen } from 'react-icons/fi';\n\nimport { flattenListData } from '../utils';\nimport { IS_BROWSER } from '../constants';\nimport Page from '../components/Page';\nimport SEO from '../components/SEO';\nimport Text from '../components/Text';\nimport Spacing from '../components/Spacing';\nimport Sidemenu from '../components/Sidemenu';\nimport Drawer from '../components/Drawer';\nimport GitHubEditLink from '../components/GitHubEditLink';\n\nexport default function TutorialItemTemplate({ data }) {\n  const menuItems = flattenListData(data, 'menu');\n\n  return (\n    <Page\n      menu={\n        <Sidemenu>\n          <Text size={14} weight={200}>\n            TUTORIAL\n          </Text>\n\n          <Spacing dir=\"y\" />\n\n          {menuItems.map(item => {\n            const isActive = IS_BROWSER\n              ? window.location.pathname === item.slug\n              : false;\n\n            return (\n              <Sidemenu.Item key={item.id} to={item.slug} isActive={isActive}>\n                {item.headings.length > 0\n                  ? item.headings[0].value\n                  : 'Missing heading!'}\n              </Sidemenu.Item>\n            );\n          })}\n        </Sidemenu>\n      }\n    >\n      <SEO />\n      <div dangerouslySetInnerHTML={{ __html: data.tutorial.html }} />\n\n      <Spacing dir=\"y\" amount={20} />\n\n      <GitHubEditLink />\n\n      <Drawer buttonPosition=\"bottom-right\" buttonIcon={<FiBookOpen />}>\n        {menuItems.map(item => (\n          <Drawer.Item key={item.id} to={item.slug}>\n            {item.headings.length > 0\n              ? item.headings[0].value\n              : 'Missing heading!'}\n          </Drawer.Item>\n        ))}\n      </Drawer>\n    </Page>\n  );\n}\n\nexport const pageQuery = graphql`\n  query TutorialByID($id: String!) {\n    tutorial: markdownRemark(id: { eq: $id }) {\n      id\n      html\n    }\n\n    menu: allMarkdownRemark(\n      filter: {\n        fileAbsolutePath: { regex: \"/^((?!README).)*$/\" }\n        fields: { slug: { regex: \"/tutorial/\" } }\n      }\n      sort: { fields: [fields___slug], order: ASC }\n    ) {\n      edges {\n        node {\n          id\n          headings(depth: h2) {\n            value\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}