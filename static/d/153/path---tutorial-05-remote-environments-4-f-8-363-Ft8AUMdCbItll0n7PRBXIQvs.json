{"data":{"markdownRemark":{"id":"3ea5bd2b-a017-57de-b0a7-649fcc6dd5d6","html":"<h1>PART II: Infrastructure</h1>\n<blockquote>\n<p>TODO: If zone does not yet exist, see chapter...\nTODO: Project configs not ok if zone has not yet been created</p>\n</blockquote>\n<h2>5. Remote environments</h2>\n<p>TODO describe environments:</p>\n<ul>\n<li><strong>f-NAME:</strong> feature</li>\n<li><strong>local:</strong> local development</li>\n<li><strong>dev:</strong> development</li>\n<li><strong>test:</strong> testing</li>\n<li><strong>stag:</strong> staging</li>\n<li><strong>canary:</strong> canary (runs side-by-side with production)</li>\n<li><strong>prod:</strong> production</li>\n</ul>\n<p>TODO hotfix branches</p>\n<p>TODO existing playground project -> destroy environments first.</p>\n<h3>5.1. Create dev environment</h3>\n<p>Create the dev environment:</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token punctuation\">(</span> EDIT taito-config.sh <span class=\"token punctuation\">)</span>       <span class=\"token comment\"># No need to edit (dev is already enabled)</span>\ntaito <span class=\"token function\">env</span> apply:dev            <span class=\"token comment\"># Create the dev environment</span>\n<span class=\"token function\">git</span> push                       <span class=\"token comment\"># Push some changes to the dev branch</span></code></pre></div>\n<p>Make sure it works ok:</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">taito <span class=\"token function\">open</span> builds              <span class=\"token comment\"># Watch it build and deploy automatically</span>\ntaito <span class=\"token function\">open</span> status:dev          <span class=\"token comment\"># Check status of dev environment</span>\ntaito <span class=\"token function\">open</span> client:dev          <span class=\"token comment\"># Open application GUI</span>\ntaito info:dev                 <span class=\"token comment\"># Show details for logging in</span>\ntaito db connect:dev           <span class=\"token comment\"># Connect to database</span>\ntaito <span class=\"token function\">open</span> storage:dev         <span class=\"token comment\"># Open storage bucket</span>\ntaito <span class=\"token function\">open</span> logs:dev            <span class=\"token comment\"># Open logs</span></code></pre></div>\n<p>The first CI/CD build will take some time. Subsequent builds are faster as they use a previous build as cache.</p>\n<h3>5.2. Enable automatic integration and e2e tests for dev environment</h3>\n<ol>\n<li>\n<p>Enable <code class=\"language-text\">ci_exec_test</code> for <code class=\"language-text\">dev</code> environment in <code class=\"language-text\">taito-config.sh</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># NOTE: enable tests once you have implemented some integration or e2e tests</span>\nci_exec_test<span class=\"token operator\">=</span>true</code></pre></div>\n</li>\n<li>\n<p>Push the change to dev branch: <code class=\"language-text\">git push</code></p>\n</li>\n<li>\n<p>See build and test execution with <code class=\"language-text\">taito open builds</code></p>\n</li>\n</ol>\n<h3>5.3. Run integration and e2e tests manually againts the dev environment</h3>\n<p>TODO some notes about docker-compose-test.yaml -> Taito CLI is used as proxy to access dev database.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">taito test:dev</code></pre></div>\n<h3>5.4. Create test environment</h3>\n<p>Create the test environment:</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">EDIT taito-config.sh           <span class=\"token comment\"># Add 'test' to 'taito_environments'</span>\ntaito <span class=\"token function\">env</span> apply:test           <span class=\"token comment\"># Create the test environment</span>\ntaito <span class=\"token function\">env</span> merge:dev <span class=\"token function\">test</span>       <span class=\"token comment\"># Merge changes from dev to test</span></code></pre></div>\n<p>Make sure it works:</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">taito <span class=\"token function\">open</span> builds              <span class=\"token comment\"># Watch it build and deploy automatically</span>\ntaito <span class=\"token function\">open</span> status:test         <span class=\"token comment\"># Check status of test environment</span>\ntaito <span class=\"token function\">open</span> client:test         <span class=\"token comment\"># Open application GUI</span></code></pre></div>\n<h3>5.5. Create production environment</h3>\n<p>Create the environment:</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token punctuation\">(</span> EDIT taito-config.sh <span class=\"token punctuation\">)</span>       <span class=\"token comment\"># No need to edit (prod is already configured)</span>\ntaito <span class=\"token function\">env</span> apply:prod           <span class=\"token comment\"># Create the prod environment</span>\ntaito <span class=\"token function\">env</span> merge:test prod      <span class=\"token comment\"># Merge changes from test to prod</span></code></pre></div>\n<p>Make sure it works:</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">taito <span class=\"token function\">open</span> builds              <span class=\"token comment\"># Watch it build and deploy automatically</span>\ntaito <span class=\"token function\">open</span> status:prod         <span class=\"token comment\"># Check status of prod environment</span>\ntaito <span class=\"token function\">open</span> client:prod         <span class=\"token comment\"># Open application GUI</span></code></pre></div>\n<blockquote>\n<p>At this point your production environment already exists. However, before releasing it to the real end-users you need to do some additional tasks that are explained in chapter <a href=\"#09-production-setup\">9. Production setup</a>.</p>\n</blockquote>\n<h3>5.6. Create canary environment</h3>\n<p>Canary environment is a special environment that uses production environment resources: databases, storage buckets, secrets and external services. That is, if you deploy your application to the canary environment, your application will run side-by-side with the production version of the application, and it will also use all the same resources.</p>\n<p>NOTE: Since canary environment uses production resources, you don't need to run <code class=\"language-text\">taito env apply:canary</code> when creating the environment.</p>\n<p>Create the canary environment:</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">EDIT taito-config.sh             <span class=\"token comment\"># Add 'canary' to 'taito_environments'</span>\ntaito <span class=\"token function\">env</span> merge:test canary      <span class=\"token comment\"># Merge changes from test to canary</span></code></pre></div>\n<p>Make sure it works:</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">taito <span class=\"token function\">open</span> builds                <span class=\"token comment\"># Watch it build and deploy automatically</span>\ntaito <span class=\"token function\">open</span> status:canary         <span class=\"token comment\"># Check status of canary environment</span>\ntaito <span class=\"token function\">open</span> client:canary         <span class=\"token comment\"># Open canary application GUI</span>\ntaito <span class=\"token function\">open</span> client:prod           <span class=\"token comment\"># Open production application GUI</span>\n** Create some posts <span class=\"token keyword\">in</span> the production app **\n** Resfresh the posts page <span class=\"token keyword\">in</span> the canary app -<span class=\"token operator\">></span> you'll see the new posts **</code></pre></div>\n<p>And how this works exactly? Well, the canary environment is mapped to production resources in <code class=\"language-text\">taito-config.sh</code> with these lines:</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\"># Environment mappings (for canary releases and A/B testing)</span>\ntaito_env<span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token variable\">${taito_env/canary/prod}</span>\"</span> <span class=\"token comment\"># canary -> prod</span></code></pre></div>\n<h3>5.7. Deploy changes through multiple environments (dev -> canary)</h3>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">git</span> push                         <span class=\"token comment\"># Push some changes to the dev branch</span>\ntaito <span class=\"token function\">env</span> merge:dev canary       <span class=\"token comment\"># Merge changes: dev -> test -> canary</span>\ntaito <span class=\"token function\">open</span> builds                <span class=\"token comment\"># See them build and deploy</span></code></pre></div>\n<h3>5.8. Create a feature environment</h3>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">TODO</code></pre></div>\n<h3>5.9. Delete the feature environment</h3>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">TODO</code></pre></div>\n<h3>5.10. Revert application to the previous revision</h3>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">taito deployment revert:prod</code></pre></div>\n<h3>5.11. Deploy a specific version of the application</h3>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">taito deployment deploy:dev 1.1.0</code></pre></div>\n<h3>5.12 Make a hotfix for production</h3>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">TODO</code></pre></div>\n<h3>5.13. Debugging</h3>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">taito <span class=\"token function\">open</span> logs:dev              <span class=\"token comment\"># Open logs of dev environment</span>\ntaito logs:server:dev            <span class=\"token comment\"># Tail logs of a container named 'worker'</span>\ntaito shell:server:dev           <span class=\"token comment\"># Start shell on a container named 'server'</span>\ntaito exec:server:dev <span class=\"token keyword\">echo</span> foo   <span class=\"token comment\"># Execute a command inside the server container</span></code></pre></div>\n<p>TODO link: Stackdriver log filtering instructions</p>\n<h3>5.14. Some additional deployment commands</h3>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">taito deployment start:dev        <span class=\"token comment\"># Start ci build for dev environment manually</span>\ntaito deployment cancel:dev       <span class=\"token comment\"># Cancel an ongoing dev environment build</span>\ntaito deployment build:worker:dev <span class=\"token comment\"># Build and deploy worker container to dev env directly from local env</span></code></pre></div>\n<h3>TODO Something about advanced deployment options?</h3>\n<blockquote>\n<p>Some of the advanced operations might require admin credentials (e.g. staging/canary/production operations). If you don't have an admin account, ask devops personnel to execute the operation for you.</p>\n</blockquote>\n<p>Advanced features (TODO not all implemented yet):</p>\n<ul>\n<li><strong>Quickly deploy settings</strong>: If you are in a hurry, you can deploy Helm/Kubernetes changes directly to an environment with the <code class=\"language-text\">taito deployment deploy:ENV</code>.</li>\n<li><strong>Quickly deploy a container</strong>: If you are in a hurry, you can build, push and deploy a single container directly to server with the <code class=\"language-text\">taito deployment build:TARGET:ENV</code> command e.g. <code class=\"language-text\">taito deployment build:client:dev</code>.</li>\n<li><strong>Copy production data to staging</strong>: Often it's a good idea to copy production database to staging before merging changes to the stag branch: <code class=\"language-text\">taito db copy between:prod:stag</code>, <code class=\"language-text\">taito storage copy between:prod:stag</code>. If you are sure nobody is using the production database, you can alternatively use the quick copy (<code class=\"language-text\">taito db copyquick between:prod:stag</code>), but it disconnects all other users connected to the production database until copying is finished and also requires that both databases are located in the same database cluster.</li>\n<li><strong>Feature branch</strong>: You can create an environment also for a feature branch: <code class=\"language-text\">taito env apply:f-NAME</code>. The feature should reside in a branch named <code class=\"language-text\">feature/NAME</code>.</li>\n<li><strong>Revert application</strong>: Revert application to the previous revision by running <code class=\"language-text\">taito deployment revert:ENV</code>. If you need to revert to a specific revision, check current revision by running <code class=\"language-text\">taito deployment revisions:ENV</code> first and then revert to a specific revision by running <code class=\"language-text\">taito deployment revert:ENV REVISION</code>. You can also deploy a specific version with <code class=\"language-text\">taito deployment deploy:ENV IMAGE_TAG|SEMANTIC_VERSION</code>.</li>\n<li><strong>Debugging CI builds</strong>: You can build and start production containers locally with the <code class=\"language-text\">taito start --clean --prod</code> command. You can also run any CI build steps defined in cloudbuild.yaml locally with Taito CLI.</li>\n</ul>\n<hr>\n<p><strong>Next:</strong> <a href=\"/tutorial/06-env-variables-and-secrets\">6. Environment variables and secrets</a></p>"}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"3ea5bd2b-a017-57de-b0a7-649fcc6dd5d6"}}