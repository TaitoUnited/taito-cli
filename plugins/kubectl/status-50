#!/bin/bash -e
# shellcheck source=lib/all.bash
. "${taito_plugin_path:?}/lib/all.bash"

all=false
kubernetes_params=""
pod_params=""
args=( "$@"  )
while [ $# -gt 0 ]
do
  case $1 in
    --all)
      all=true
      pod_params="-o=wide"
      shift || :
      ;;
    --all-namespaces)
      kubernetes_params="--all-namespaces"
      shift || :
      ;;
  esac
done

kubectl::use_context

if [ $all = true ]; then
  taito::print_title "Node details"
  (taito::executing_start; kubectl describe nodes) || :

  taito::print_title "Nodes"
  (taito::executing_start; kubectl top nodes 2> /dev/null) || :

  taito::print_title "Ingress"
  (
    taito::executing_start
    kubectl get ingress $kubernetes_params | grep -e "\-${taito_deployment_suffix}-\\|NAME"
  ) || :

  taito::print_title "Jobs"
  (
    taito::executing_start
    kubectl get jobs $kubernetes_params | grep -e "\-${taito_deployment_suffix}-\\|NAME"
  ) || :
fi

taito::print_title "Cron jobs"
(
  taito::executing_start
  kubectl get cronjobs $kubernetes_params | grep -e "\-${taito_deployment_suffix}-\\|NAME"
) || :

if [ "${taito_version:-}" -ge "1" ]; then
  taito::print_title "Pods"
  (
    taito::executing_start
    kubectl get pods $kubernetes_params $pod_params | grep -e "\-${taito_deployment_suffix}-\\|NAME"
  ) || :

  unready_pods=$(
    kubectl get pods $kubernetes_params -o go-template='{{ range  $item := .items }}{{ range .status.conditions }}{{ if (or (and (eq .type "PodScheduled") (eq .status "False")) (and (eq .type "Ready") (eq .status "False") (ne (or .reason "") "PodCompleted"))) }}{{ $item.metadata.name}} {{ end }}{{ end }}{{ end }}' | tr ' ' '\n' | grep -e "\-${taito_deployment_suffix}-\\|NAME"
  ) || :
  if [[ ${unready_pods} ]]; then
    taito::print_title "Pods not ready"
    echo "${unready_pods}"
    echo
    echo "------------------------------------------------------------------"
    echo "WARNING! Some of the pods are not ready!"
    echo "------------------------------------------------------------------"
  fi

  taito::print_title "Resource usage"
  (taito::executing_start; kubectl top pod $kubernetes_params 2> /dev/null | grep -e "\-${taito_deployment_suffix}-\\|NAME") || :

  taito::print_title "Images"
  (
    taito::executing_start
    # TODO: filter by "\-${taito_deployment_suffix}-"
    kubectl get pods $kubernetes_params -o jsonpath="{.items[*].spec.containers[*].image}" | \
      tr -s '[[:space:]]' '\n' | sort | uniq
  ) || :
else
  taito::print_title "Pods"
  (taito::executing_start; kubectl get pods $kubernetes_params $pod_params) || :

  taito::print_title "Resource usage"
  (taito::executing_start; kubectl top pod $kubernetes_params 2> /dev/null) || :
fi

if [ $all = false ] || [ ! $kubernetes_params ]; then
  taito::print_title "More info"
fi
if [ $all = false ]; then
  echo "See more info with '--all'"
fi
if [ ! $kubernetes_params ]; then
  echo "See all namespaces with '--all-namespaces'"
fi

taito::call_next "${args[@]}"
