{"version":3,"sources":["webpack:///./src/components/Terminal.js","webpack:///./src/hooks.js","webpack:///./src/pages/index.js","webpack:///./src/components/Gutter.js","webpack:///./src/components/Drawer.js","webpack:///./src/components/SEO.js","webpack:///./src/components/search/SearchInput.js","webpack:///./src/components/search/SearchHit.js","webpack:///./src/components/search/index.js","webpack:///./src/components/Navbar.js","webpack:///./src/components/Navigation.js","webpack:///./src/images/taito_char_white.png"],"names":["trailConfig","mass","tension","friction","Terminal","_ref","lines","ref","React","useRef","_React$useState","useState","shouldAnimate","setShouldAnimate","isOnScreen","rootMargin","isIntersecting","setIntersecting","useEffect","el","current","observer","IntersectionObserver","entry","observe","unobserve","useOnScreen","trail","useTrail","length","config","delay","opacity","x","from","Object","core_browser_esm","Wrapper","Header","HeaderLogo","Logo","src","taitoCharacterImg","HeaderButtons","HeaderButton","color","Content","map","_ref2","index","rest","objectWithoutPropertiesLoose_default","LineWrapper","key","LineSymbol","style","assign","Line","transform","interpolate","styled_base_browser_esm","target","props","theme","black","media","sm","_templateObject","name","styles","animated","div","_templateObject2","grey","TerminalLinePrefix","primary","TerminalLineSuffix","LinePrefix","LineSuffix","__webpack_exports__","pages_Wrapper","SEO","Navigation","isHome","Hero","Title","Gutter","dir","Slogan","amount","Actions","Button","to","variant","pages_Content","Section","SectionText","SectionTitle","components_Terminal","Divider","info","InlineCode","pages_templateObject","pages_templateObject2","_templateObject3","Link","css","_templateObject4","_templateObject5","_templateObject6","getWidthOrHeight","getMediaDim","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_1__","getDim","md","lg","MENU_WIDTH","IS_BROWSER","Math","min","window","innerWidth","ELEVATIONS","propTypes","buttonPosition","PropTypes","oneOf","buttonIcon","node","Drawer","_ref4","children","isOpen","setOpen","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2___default","a","Fragment","MenuButton","onClick","position","react_icons_fi__WEBPACK_IMPORTED_MODULE_3__","Backdrop","isVisible","Menu","Children","comp","cloneElement","setTimeout","navigate","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__","mobileOnly","MenuItem","isActive","_ref3","Item","defaultProps","title","description","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","gatsby__WEBPACK_IMPORTED_MODULE_5__","query","render","_ref2$site$siteMetada","site","siteMetadata","defaultTitle","defaultDescription","seo","react_helmet__WEBPACK_IMPORTED_MODULE_3__","content","property","data","_public_static_d_1858091358_json__WEBPACK_IMPORTED_MODULE_1__","string","Form","Input","connectSearchBox","refine","fi_index_esm","extends_default","type","placeholder","aria-label","onChange","e","value","SearchHit","hit","objectID","slug","pageHeading","parentHeading","heading","last","substr","slugify","urlWithAnchor","HitLink","HitHeading","Highlight","attribute","tagName","isRequired","searchClient","algoliasearch","process","HitResults","connectStateResults","state","searchState","res","searchResults","nbHits","SearchWrapper","search_templateObject","HitWrapper","search_templateObject2","PoweredBy","Search","wrapperRef","focused","setFocused","_React$useState2","setQuery","handleClickOutside","event","contains","document","addEventListener","removeEventListener","InstantSearch","indexName","root","Root","onSearchStateChange","search_SearchInput","onFocus","Hits","hitComponent","index_esm","size","href","Nav","desktopOnly","NavLinks","NavLink","Navbar","activeStyle","fontWeight","borderColor","partiallyActive","flex","search","rel","MobileSearch","transparent","react_default","components_Navbar","module","exports","__webpack_require__","p"],"mappings":"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","file":"component---src-pages-index-js-58adb88525070fc42c32.js","sourcesContent":["import React from 'react';\nimport styled from '@emotion/styled';\nimport { useTrail, animated } from 'react-spring';\n\nimport taitoCharacterImg from '../images/taito_char_white.png';\nimport { useOnScreen } from '../hooks';\nimport { media } from '../utils';\n\nconst trailConfig = {\n  mass: 5,\n  tension: 3000,\n  friction: 500,\n};\n\nconst Terminal = ({ lines }) => {\n  const ref = React.useRef();\n  const [shouldAnimate, setShouldAnimate] = React.useState(false);\n  const isOnScreen = useOnScreen(ref, '-100px');\n\n  const trail = useTrail(lines.length, {\n    config: trailConfig,\n    delay: 500,\n    opacity: shouldAnimate ? 1 : 0,\n    x: shouldAnimate ? 0 : -20,\n    from: { opacity: 0, x: -20 },\n  });\n\n  // Animate terminal lines when comp is inside viewport\n  React.useEffect(() => {\n    if (isOnScreen && !shouldAnimate) {\n      setShouldAnimate(true);\n    }\n  }, [isOnScreen, shouldAnimate]);\n\n  return (\n    <Wrapper ref={ref}>\n      <Header>\n        <HeaderLogo>\n          <Logo src={taitoCharacterImg} />\n        </HeaderLogo>\n\n        <HeaderButtons>\n          <HeaderButton color=\"#ff5f56\" />\n          <HeaderButton color=\"#ffbd2e\" />\n          <HeaderButton color=\"#27c93f\" />\n        </HeaderButtons>\n      </Header>\n\n      <Content>\n        {trail.map(({ x, ...rest }, index) => (\n          <LineWrapper key={index}>\n            <LineSymbol style={{ ...rest }} />\n            <Line\n              style={{\n                ...rest,\n                transform: x.interpolate(x => `translate3d(${x}px,0,0)`),\n              }}\n            >\n              {lines[index]}\n            </Line>\n          </LineWrapper>\n        ))}\n      </Content>\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.div`\n  background-color: ${props => props.theme.black};\n  border-radius: 8px;\n  width: 500px;\n  min-height: 320px;\n  display: flex;\n  flex-direction: column;\n\n  ${media.sm`\n    width: 100%;\n    min-height: 250px;\n  `}\n`;\n\nconst Header = styled.div`\n  position: relative;\n  height: 40px;\n  display: flex;\n  align-items: center;\n`;\n\nconst HeaderButtons = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 0px 16px;\n`;\n\nconst HeaderButton = styled.div`\n  width: 12px;\n  height: 12px;\n  border-radius: 50%;\n  background-color: ${props => props.color};\n  margin-right: 8px;\n`;\n\nconst HeaderLogo = styled.div`\n  position: absolute;\n  left: 0;\n  right: 0;\n  top: 0;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Logo = styled.img`\n  height: 18px;\n  width: auto;\n`;\n\nconst Content = styled.div`\n  flex: 1;\n  padding: 16px;\n  overflow-y: auto;\n`;\n\nconst LineWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: baseline;\n  width: 100%;\n  margin-bottom: 16px;\n`;\n\nconst Line = styled(animated.div)`\n  flex: 1;\n  color: #fff;\n  will-change: transform, opacity;\n\n  ${media.sm`\n    font-size: 14px;\n  `}\n`;\n\nconst LineSymbol = styled(animated.div)`\n  width: 0;\n  height: 0;\n  border-style: solid;\n  border-width: 4px 0 4px 8px;\n  border-color: transparent transparent transparent\n    ${props => props.theme.grey[700]};\n  margin-right: 12px;\n`;\n\nconst TerminalLinePrefix = styled.span`\n  font-weight: 700;\n  margin-right: 6px;\n  color: ${props => props.color || props.theme.primary[400]};\n`;\n\nconst TerminalLineSuffix = styled.span`\n  color: ${props => props.theme.grey[200]};\n`;\n\nTerminal.LinePrefix = TerminalLinePrefix;\nTerminal.LineSuffix = TerminalLineSuffix;\n\nexport default Terminal;\n","import React from 'react';\nimport { navigate } from 'gatsby';\nimport { IS_BROWSER } from './constants';\n\nexport const useForceTrailingSlash = () => {\n  React.useEffect(() => {\n    if (IS_BROWSER) {\n      const lastIndex = window.location.pathname.length - 1;\n      if (window.location.pathname[lastIndex] !== '/') {\n        navigate(`${window.location.pathname}/`);\n      }\n    }\n  }, []);\n};\n\n// https://usehooks.com/useOnScreen/\nexport const useOnScreen = (ref, rootMargin = '0px') => {\n  const [isIntersecting, setIntersecting] = React.useState(false);\n\n  React.useEffect(() => {\n    const el = ref.current;\n    const observer = new IntersectionObserver(\n      ([entry]) => {\n        setIntersecting(entry.isIntersecting);\n      },\n      {\n        rootMargin,\n      }\n    );\n\n    if (el) observer.observe(el);\n\n    return () => {\n      observer.unobserve(el);\n    };\n  }, [ref, rootMargin]);\n\n  return isIntersecting;\n};\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport { css } from '@emotion/core';\nimport { Link } from 'gatsby';\n\nimport theme from '../theme';\nimport { media } from '../utils';\nimport SEO from '../components/SEO';\nimport Gutter from '../components/Gutter';\nimport Navigation from '../components/Navigation';\nimport Terminal from '../components/Terminal';\n\nexport default () => (\n  <Wrapper>\n    <SEO />\n\n    <Navigation isHome />\n\n    <Hero>\n      <Title>\n        <strong>Taito</strong>\n        &nbsp;CLI\n      </Title>\n\n      <Gutter dir=\"vertical\" />\n      <Slogan>An extensible toolkit for DevOps and NoOps.</Slogan>\n      <Gutter dir=\"vertical\" amount={24} />\n\n      <Actions>\n        <Button to=\"/docs\">Get started</Button>\n        <Gutter amount={32} sm={{ amount: 16 }} />\n        <Button to=\"/tutorial\" variant=\"light\">\n          See the tutorial\n        </Button>\n      </Actions>\n    </Hero>\n\n    <Content>\n      <Section>\n        <SectionText>\n          <SectionTitle>Standard command set</SectionTitle>\n          <p>\n            Use the same simple command set from project to project no matter\n            the technology or infrastructure. Easily manage your containers,\n            functions, databases, object storages, and legacy applications\n            wherever they are deployed. Just add a taito configuration file to\n            your project, and you’re good to go.\n          </p>\n        </SectionText>\n\n        <Gutter amount={24} sm={{ dir: 'vertical', amount: 32 }} />\n\n        <Terminal\n          lines={[\n            [\n              <Terminal.LinePrefix>taito</Terminal.LinePrefix>,\n              <Terminal.LineSuffix>status:test</Terminal.LineSuffix>,\n            ],\n            [\n              <Terminal.LinePrefix>taito</Terminal.LinePrefix>,\n              <Terminal.LineSuffix>open client:test</Terminal.LineSuffix>,\n            ],\n            [\n              <Terminal.LinePrefix>taito</Terminal.LinePrefix>,\n              <Terminal.LineSuffix>logs:server:test</Terminal.LineSuffix>,\n            ],\n            [\n              <Terminal.LinePrefix>taito</Terminal.LinePrefix>,\n              <Terminal.LineSuffix>db copy:dev test</Terminal.LineSuffix>,\n            ],\n            [\n              <Terminal.LinePrefix>taito</Terminal.LinePrefix>,\n              <Terminal.LineSuffix>db connect:test</Terminal.LineSuffix>,\n            ],\n          ]}\n        />\n      </Section>\n\n      <Divider />\n\n      <Section>\n        <SectionText>\n          <SectionTitle>Multicloud, on any platform</SectionTitle>\n          <p>\n            Deploy your applications to multiple platforms without any extra\n            hassle. Leverage public cloud for fluent collaboration between\n            in-house and external personnel during development. Deploy to\n            on-premises to meet the extra security requirements of a production\n            environment.\n          </p>\n        </SectionText>\n\n        <Gutter amount={24} sm={{ dir: 'vertical', amount: 32 }} />\n\n        <Terminal\n          lines={[\n            [\n              <Terminal.LinePrefix>taito</Terminal.LinePrefix>,\n              <Terminal.LineSuffix>zone create: gcp</Terminal.LineSuffix>,\n            ],\n            [\n              <Terminal.LinePrefix>taito</Terminal.LinePrefix>,\n              <Terminal.LineSuffix>zone create: vmware</Terminal.LineSuffix>,\n            ],\n            [\n              <Terminal.LinePrefix>taito</Terminal.LinePrefix>,\n              <Terminal.LineSuffix>\n                project create: full-stack\n              </Terminal.LineSuffix>,\n            ],\n            [\n              <Terminal.LinePrefix>taito</Terminal.LinePrefix>,\n              <Terminal.LineSuffix>env apply:dev</Terminal.LineSuffix>,\n            ],\n            [\n              <Terminal.LinePrefix>taito</Terminal.LinePrefix>,\n              <Terminal.LineSuffix>env apply:canary</Terminal.LineSuffix>,\n            ],\n            [\n              <Terminal.LinePrefix>taito</Terminal.LinePrefix>,\n              <Terminal.LineSuffix>env apply:prod</Terminal.LineSuffix>,\n            ],\n          ]}\n        />\n      </Section>\n\n      <Divider />\n\n      <Section>\n        <SectionText>\n          <SectionTitle>Simple to use</SectionTitle>\n          <p>\n            Many daily tasks, such as connecting to a database, can be extremely\n            tedious. Before actually connecting to the database, you have to\n            locate the correct database cluster, the correct database in it,\n            and the credentials for database access. You may also have to\n            establish a secure tunnel by using a proxy.\n          </p>\n          <p>\n            With Taito CLI you achieve all this with a one simple command.\n          </p>\n        </SectionText>\n\n        <Gutter amount={24} sm={{ dir: 'vertical', amount: 32 }} />\n\n        <Terminal\n          lines={[\n            [\n              <Terminal.LinePrefix>taito</Terminal.LinePrefix>,\n              <Terminal.LineSuffix>db connect:test</Terminal.LineSuffix>,\n            ],\n            [\n              <Terminal.LinePrefix color={theme.grey[500]}>\n                #\n              </Terminal.LinePrefix>,\n              <Terminal.LineSuffix>\n                Without Taito CLI:\n              </Terminal.LineSuffix>,\n            ],\n            [\n              <Terminal.LinePrefix color={theme.info}>\n                cloud_sql_proxy\n              </Terminal.LinePrefix>,\n              <Terminal.LineSuffix>\n                -instances=acme-zone:europe-west1:acme-postgres=tcp:127.0.0.1:5001\n              </Terminal.LineSuffix>,\n            ],\n            [\n              <Terminal.LinePrefix color={theme.info}>\n                psql\n              </Terminal.LinePrefix>,\n              <Terminal.LineSuffix>\n                psql -h 127.0.0.1 -p 5001 -d acme_chat_test -U acme_chat_test\n              </Terminal.LineSuffix>,\n            ],\n            [\n              <Terminal.LinePrefix color={theme.info}>\n                output: Password:\n              </Terminal.LinePrefix>,\n              <Terminal.LineSuffix>\n                ******************\n              </Terminal.LineSuffix>,\n            ],\n          ]}\n        />\n      </Section>\n\n      <Divider />\n\n      <Section>\n        <SectionText>\n          <SectionTitle>No lock-in</SectionTitle>\n          <p>\n            Taito CLI is a lightweight wrapper that reduces technology and\n            vendor lock-in by providing a standard command set on top of various\n            platform specific tools. You just run a simple taito command, and\n            Taito CLI runs a number of platform or technology specific commands\n            under the hood based on your configuration.\n          </p>\n          <p>\n            However, you can use all those tools also directly without Taito\n            CLI, and therefore you can stop using Taito CLI at any time, if you\n            like. There is no lock-in with Taito CLI.\n          </p>\n        </SectionText>\n\n        <Gutter amount={24} sm={{ dir: 'vertical', amount: 32 }} />\n\n        <Terminal\n          lines={[\n            [\n              <Terminal.LinePrefix>taito</Terminal.LinePrefix>,\n              <Terminal.LineSuffix>--verbose status:dev</Terminal.LineSuffix>,\n            ],\n            [\n              <Terminal.LinePrefix color={theme.info}>\n                output: kubectl\n              </Terminal.LinePrefix>,\n              <Terminal.LineSuffix>\n                config use-context acme-chat-dev\n              </Terminal.LineSuffix>,\n            ],\n            [\n              <Terminal.LinePrefix color={theme.info}>\n                output: kubectl\n              </Terminal.LinePrefix>,\n              <Terminal.LineSuffix>get cronjobs</Terminal.LineSuffix>,\n            ],\n            [\n              <Terminal.LinePrefix color={theme.info}>\n                output: kubectl\n              </Terminal.LinePrefix>,\n              <Terminal.LineSuffix>get pods</Terminal.LineSuffix>,\n            ],\n            [\n              <Terminal.LinePrefix color={theme.info}>\n                output: kubectl\n              </Terminal.LinePrefix>,\n              <Terminal.LineSuffix>top pod</Terminal.LineSuffix>,\n            ],\n            [\n              <Terminal.LinePrefix color={theme.info}>\n                output: helm\n              </Terminal.LinePrefix>,\n              <Terminal.LineSuffix>\n                list --namespace acme-chat-dev\n              </Terminal.LineSuffix>,\n            ],\n          ]}\n        />\n      </Section>\n\n      <Divider />\n\n      <Section>\n        <SectionText>\n          <SectionTitle>All tools included</SectionTitle>\n          <p>\n            Working with modern hybrid cloud environments requires lots of\n            tools. Taito CLI Docker container image contains all the tools you\n            need, and you can upgrade it anytime by running:\n          </p>\n          <InlineCode>taito upgrade</InlineCode>\n          <p>\n            And if you need something special, it is very easy to customize the\n            Taito CLI image with your own requirements.\n          </p>\n        </SectionText>\n\n        <Gutter amount={24} sm={{ dir: 'vertical', amount: 32 }} />\n\n        <Terminal\n          lines={[\n            [\n              <Terminal.LinePrefix>taito</Terminal.LinePrefix>,\n              <Terminal.LineSuffix>-- terraform apply</Terminal.LineSuffix>,\n            ],\n            [\n              <Terminal.LinePrefix>taito</Terminal.LinePrefix>,\n              <Terminal.LineSuffix>\n                -- kubectl get pods --namespace acme-chat-dev\n              </Terminal.LineSuffix>,\n            ],\n            [\n              <Terminal.LinePrefix>taito</Terminal.LinePrefix>,\n              <Terminal.LineSuffix>\n                -- gcloud dns managed-zones list\n              </Terminal.LineSuffix>,\n            ],\n            [\n              <Terminal.LinePrefix>taito</Terminal.LinePrefix>,\n              <Terminal.LineSuffix>\n                -- aws ec2 describe-instances\n              </Terminal.LineSuffix>,\n            ],\n          ]}\n        />\n      </Section>\n\n      <Divider />\n\n      <Section>\n        <SectionText>\n          <SectionTitle>Extensible</SectionTitle>\n          <p>\n            Add Taito CLI support for any technology by implementing a Taito CLI\n            plugin. Create custom commands and share them with your colleagues\n            as Taito CLI extensions. Implement project specific Taito CLI\n            commands with npm or make.\n          </p>\n        </SectionText>\n\n        <Gutter amount={24} sm={{ dir: 'vertical', amount: 32 }} />\n\n        <Terminal\n          lines={[\n            [\n              <Terminal.LinePrefix>taito</Terminal.LinePrefix>,\n              <Terminal.LineSuffix>\n                order pizza: quattro stagioni\n              </Terminal.LineSuffix>,\n            ],\n            [\n              <Terminal.LinePrefix>taito</Terminal.LinePrefix>,\n              <Terminal.LineSuffix>hours add: 6.5</Terminal.LineSuffix>,\n            ],\n          ]}\n        />\n      </Section>\n\n      <Divider />\n\n      <Section>\n        <SectionText>\n          <SectionTitle>Uniform conventions</SectionTitle>\n          <p>\n            Maintain good and uniform conventions by providing reusable\n            infrastructure templates and project templates.\n          </p>\n          <p>\n            Customize software development workflows for your organization with\n            custom Taito CLI extensions.\n          </p>\n        </SectionText>\n\n        <Gutter amount={24} sm={{ dir: 'vertical', amount: 32 }} />\n\n        <Terminal\n          lines={[\n            [\n              <Terminal.LinePrefix color={theme.info}>\n                nano\n              </Terminal.LinePrefix>,\n              <Terminal.LineSuffix>\n                ~/.taito/taito-config.sh\n              </Terminal.LineSuffix>,\n            ],\n            <span>\n              output: taito_global_extensions=\"git@github.com:MyOrg/myorg-extension.git\"\n            </span>,\n            <span>output: taito_global_plugins=\"myorg-git-global ...\"</span>,\n          ]}\n        />\n      </Section>\n\n    </Content>\n  </Wrapper>\n);\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: 100%;\n\n  & p {\n    line-height: 1.5;\n  }\n`;\n\nconst Hero = styled.div`\n  padding-top: 50px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  height: 400px;\n  background-color: ${props => props.theme.primary[500]};\n\n  ${media.sm`\n    height: auto;\n    padding: 88px 16px 32px 16px;\n    justify-content: flex-end;\n    text-align: center;\n  `}\n`;\n\nconst Title = styled.h1`\n  font-size: 48px;\n  font-weight: 200;\n  color: #fff;\n  margin: 0px;\n\n  ${media.sm`\n    font-size: 32px;\n  `}\n`;\n\nconst Slogan = styled.h2`\n  font-size: 20px;\n  font-weight: 400;\n  color: #fff;\n  margin: 0;\n\n  ${media.sm`\n    font-size: 18px;\n  `}\n`;\n\nconst Actions = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\n\nconst Button = styled(Link)`\n  padding: 8px 24px;\n  background-color: ${props => props.theme.primary[300]};\n  color: ${props => props.theme.primary[900]};\n  text-align: center;\n  text-decoration: none;\n  border: none;\n  border-radius: 99px;\n  font-weight: 500;\n  box-shadow: 0px 2px 12px rgba(0, 0, 0, 0.2);\n\n  ${props =>\n    props.variant === 'light' &&\n    css`\n      background-color: #fff;\n      color: ${props => props.theme.primary[500]};\n    `}\n`;\n\nconst Content = styled.div`\n  max-width: 1100px;\n  background-color: #fff;\n  border-radius: 8px;\n  padding: 23px;\n  min-height: 100vh;\n  box-shadow: 0px 2px 12px rgba(0, 0, 0, 0.2);\n  margin-top: -48px;\n  margin-bottom: 32px;\n  margin-right: auto;\n  margin-left: auto;\n\n  ${media.sm`\n    padding: 16px;\n    margin-top: 0px;\n    box-shadow: none;\n  `}\n`;\n\nconst Section = styled.section`\n  display: flex;\n  flex-direction: row;\n\n  ${media.sm`\n    flex-direction: column;\n    align-items: center;\n  `}\n`;\n\nconst Divider = styled.div`\n  background-color: ${props => props.theme.grey[200]};\n  height: 1px;\n  width: 100%;\n  margin: 64px 0px;\n\n  ${media.sm`\n    margin: 32px 0px;\n  `}\n`;\n\nconst SectionTitle = styled.h3`\n  font-size: 24px;\n  margin-top: 0px;\n  margin-bottom: 16px;\n  color: ${props => props.theme.black};\n`;\n\nconst SectionText = styled.div`\n  flex: 1;\n`;\n\nconst InlineCode = styled.div`\n  border-radius: 6px;\n  background-color: ${props => props.theme.grey[200]};\n  color: ${props => props.theme.grey[700]};\n  padding: 8px 12px;\n  font-family: Consolas, Menlo, Monaco, 'Andale Mono WT', 'Andale Mono',\n    'Lucida Console', 'Lucida Sans Typewriter', 'DejaVu Sans Mono',\n    'Bitstream Vera Sans Mono', 'Liberation Mono', 'Nimbus Mono L',\n    'Courier New', Courier, monospace;\n  font-size: 14px;\n`;\n","import styled from '@emotion/styled';\nimport { media } from '../utils';\n\nconst DEFAULT_PAD = 16;\n\nconst getWidthOrHeight = dir => {\n  switch (dir) {\n    case 'horizontal':\n      return 'width';\n    case 'vertical':\n      return 'height';\n    default:\n      return 'width';\n  }\n};\n\nconst getDim = props => {\n  const amount = props.amount || DEFAULT_PAD;\n  return `${getWidthOrHeight(props.dir)}: ${amount}px;`;\n};\n\nconst getMediaDim = (props, { dir, amount: mAmount }) => {\n  const amount = mAmount || props.amount || DEFAULT_PAD;\n  return `${getWidthOrHeight(dir || props.dir)}: ${amount}px;`;\n};\n\nconst Gutter = styled.div`\n  height: 0px;\n  ${props => getDim(props)}\n  ${props => props.sm && media.sm`${getMediaDim(props, props.sm)}`}\n  ${props => props.md && media.md`${getMediaDim(props, props.md)}`}\n  ${props => props.lg && media.lg`${getMediaDim(props, props.lg)}`}\n`;\n\nexport default Gutter;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport { css } from '@emotion/core';\nimport { FiMenu } from 'react-icons/fi';\nimport { navigate } from 'gatsby';\nimport PropTypes from 'prop-types';\n\nimport { mobileOnly } from '../utils';\nimport { IS_BROWSER } from '../constants';\n\nconst MENU_WIDTH = IS_BROWSER ? Math.min(360, window.innerWidth * 0.8) : 360;\nconst MENU_CLOSE_MS = 400;\nconst ELEVATIONS = { menu: 3, backdrop: 2, button: 1 };\n\nconst propTypes = {\n  buttonPosition: PropTypes.oneOf(['top-left', 'bottom-right', 'top-right']),\n  buttonIcon: PropTypes.node,\n};\n\nconst Drawer = ({ buttonPosition, buttonIcon, children }) => {\n  const [isOpen, setOpen] = React.useState(false);\n\n  const navigateDelayed = to => {\n    setOpen(false);\n    setTimeout(() => navigate(to), MENU_CLOSE_MS);\n  };\n\n  return (\n    <>\n      <MenuButton onClick={() => setOpen(true)} position={buttonPosition}>\n        {buttonIcon || <FiMenu />}\n      </MenuButton>\n\n      <Backdrop isVisible={isOpen} onClick={() => setOpen(false)} />\n\n      <Menu isOpen={isOpen}>\n        {React.Children.map(children, (comp, index) =>\n          React.cloneElement(comp, {\n            key: index,\n            onClick: () => navigateDelayed(comp.props.to),\n          })\n        )}\n      </Menu>\n    </>\n  );\n};\n\nconst Backdrop = styled.div`\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  background-color: rgba(0, 0, 0, 0.4);\n  z-index: ${ELEVATIONS.backdrop};\n  transition: opacity 0.3s ease-in;\n  opacity: ${props => (props.isVisible ? 1 : 0)};\n  pointer-events: ${props => (props.isVisible ? 'auto' : 'none')};\n  ${mobileOnly};\n`;\n\nconst Menu = styled.div`\n  position: fixed;\n  z-index: ${ELEVATIONS.menu};\n  top: 0;\n  bottom: 0;\n  left: 0;\n  overflow-y: auto;\n  width: ${MENU_WIDTH}px;\n  z-index: 100;\n  display: flex;\n  flex-direction: column;\n  box-shadow: 0px 0px 12px rgba(0, 0, 0, 0.5);\n  will-change: transform;\n  transform: translateX(${props => (props.isOpen ? 0 : -MENU_WIDTH - 10)}px);\n  transition: transform ${MENU_CLOSE_MS}ms cubic-bezier(0.2, 0.71, 0.14, 0.91);\n  background-color: #fff;\n  ${mobileOnly};\n`;\n\nconst MenuItem = styled.div`\n  padding: 16px;\n  position: relative;\n\n  &:active {\n    background-color: ${props => props.theme.primary[100]};\n  }\n\n  &::before {\n    content: '';\n    display: ${props => (props.isActive ? 'block' : 'none')};\n    position: absolute;\n    left: -5px;\n    top: 50%;\n    transform: translateY(-50%);\n    width: 12px;\n    height: 8px;\n    background-color: ${props => props.theme.primary[500]};\n    border-radius: 99px;\n  }\n`;\n\nconst MenuButton = styled.button`\n  position: fixed;\n  z-index: ${ELEVATIONS.button};\n  border: none;\n  padding: 0;\n  color: ${props => props.theme.primary[500]};\n  background-color: #fff;\n  border-radius: 50%;\n  height: 48px;\n  width: 48px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  outline: none;\n  opacity: 1;\n  transition: opacity 0.2s ease;\n  font-size: 24px;\n  box-shadow: 0px 2px 8px rgba(0,0,0,0.2);\n\n  &:active {\n    opacity: 0.7;\n  }\n\n  ${props =>\n    props.position === 'top-left' &&\n    css`\n      top: 8px;\n      left: 8px;\n    `}\n\n  ${props =>\n    props.position === 'top-right' &&\n    css`\n      top: 8px;\n      right: 8px;\n    `}\n\n  ${props =>\n    props.position === 'bottom-right' &&\n    css`\n      bottom: 24px;\n      right: 8px;\n    `}\n\n  ${mobileOnly};\n`;\n\nDrawer.Item = MenuItem;\nDrawer.propTypes = propTypes;\nDrawer.defaultProps = {\n  buttonPosition: 'top-right',\n};\n\nexport default Drawer;\n","import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport PropTypes from 'prop-types';\nimport { StaticQuery, graphql } from 'gatsby';\n\nconst SEO = ({ title, description }) => (\n  <StaticQuery\n    query={query}\n    render={({\n      site: {\n        siteMetadata: { defaultTitle, defaultDescription },\n      },\n    }) => {\n      const seo = {\n        title: title || defaultTitle,\n        description: description || defaultDescription,\n      };\n\n      return (\n        <Helmet title={seo.title}>\n          <meta name=\"description\" content={seo.description} />\n\n          {seo.title && <meta property=\"og:title\" content={seo.title} />}\n\n          {seo.description && (\n            <meta property=\"og:description\" content={seo.description} />\n          )}\n\n          {seo.title && <meta name=\"twitter:title\" content={seo.title} />}\n\n          {seo.description && (\n            <meta name=\"twitter:description\" content={seo.description} />\n          )}\n        </Helmet>\n      );\n    }}\n  />\n);\n\nexport default SEO;\n\nSEO.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string,\n};\n\nSEO.defaultProps = {\n  title: null,\n  description: null,\n};\n\nconst query = graphql`\n  query SEO {\n    site {\n      siteMetadata {\n        defaultTitle: title\n        defaultDescription: description\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport { connectSearchBox } from 'react-instantsearch-dom';\nimport { FiSearch } from 'react-icons/fi';\n\nimport { media } from '../../utils';\n\nconst SearchInput = ({ refine, ...rest }) => {\n  return (\n    <Form>\n      <FiSearch />\n      <Input\n        type=\"text\"\n        placeholder=\"Search\"\n        aria-label=\"Search\"\n        onChange={e => refine(e.target.value)}\n        {...rest}\n      />\n    </Form>\n  );\n};\n\nconst Form = styled.form`\n  display: flex;\n  align-items: center;\n  color: #fff;\n  padding: 6px 8px;\n  border-radius: 4px;\n  background-color: rgba(0, 0, 0, 0.2);\n\n  ${props => media.sm`\n    width: 100%;\n    padding: 0px 8px;\n    height: 40px;\n    border: 1px solid ${props.theme.grey[500]};\n    color: ${props.theme.black};\n    background-color: ${props.theme.grey[100]};\n  `}\n`;\n\nconst Input = styled.input`\n  margin-left: 8px;\n  background: transparent;\n  border: none;\n  outline: none;\n  font-size: 14px;\n  color: #fff;\n\n  ${props => media.sm`\n    font-size: 16px;\n    color: ${props.theme.black};\n  `}\n\n  &::placeholder {\n    color: #ccc;\n  }\n`;\n\nexport default connectSearchBox(SearchInput);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from '@emotion/styled';\nimport { Highlight } from 'react-instantsearch-dom';\nimport { Link } from 'gatsby';\nimport { slugify } from '../../utils';\n\nconst urlWithAnchor = (slug, heading) => {\n  const last = slug.length - 1;\n  const url = slug[last] === '/' ? slug.substr(0, last) : slug;\n  return `${url}#${slugify(heading)}`;\n};\n\nconst SearchHit = ({ hit }) => {\n  const { objectID, slug, pageHeading, parentHeading } = hit;\n  const to = parentHeading ? urlWithAnchor(slug, parentHeading) : slug;\n\n  return (\n    <HitLink to={to} key={objectID}>\n      <HitHeading>{pageHeading}</HitHeading>\n      <Highlight hit={hit} attribute=\"content\" tagName=\"mark\" />\n    </HitLink>\n  );\n};\n\nconst HitLink = styled(Link)`\n  text-decoration: none;\n  color: #222;\n  display: flex;\n  flex-direction: column;\n  border-bottom: 1px solid ${props => props.theme.grey[300]};\n  padding-bottom: 8px;\n\n  &:hover {\n    background-color: ${props => props.theme.primary[100]};\n  }\n`;\n\nconst HitHeading = styled.div`\n  padding: 3px 6px;\n  background-color: ${props => props.theme.primary[500]};\n  color: #fff;\n  font-weight: 700;\n  font-size: 14px;\n  width: fit-content;\n  border-radius: 4px;\n  margin-bottom: 4px;\n`;\n\nSearchHit.propTypes = {\n  content: PropTypes.string.isRequired,\n  objectID: PropTypes.string.isRequired,\n  slug: PropTypes.string.isRequired,\n  pageHeading: PropTypes.string,\n  parentHeading: PropTypes.string,\n};\n\nexport default SearchHit;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport algoliasearch from 'algoliasearch/lite';\nimport { FaAlgolia } from 'react-icons/fa';\n\nimport {\n  InstantSearch,\n  Hits,\n  connectStateResults,\n} from 'react-instantsearch-dom';\n\nimport { media } from '../../utils';\nimport Gutter from '../Gutter';\nimport SearchInput from './SearchInput';\nimport SearchHit from './SearchHit';\n\nconst searchClient = algoliasearch(\n  process.env.GATSBY_ALGOLIA_APP_ID,\n  process.env.GATSBY_ALGOLIA_SEARCH_KEY\n);\n\nconst Search = () => {\n  const wrapperRef = React.useRef();\n  const [focused, setFocused] = React.useState(false);\n  const [query, setQuery] = React.useState('');\n\n  React.useEffect(() => {\n    function handleClickOutside(event) {\n      if (wrapperRef.current && !wrapperRef.current.contains(event.target)) {\n        setFocused(false);\n      }\n    }\n\n    document.addEventListener('mousedown', handleClickOutside);\n    document.addEventListener('touchstart', handleClickOutside);\n\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n      document.removeEventListener('touchstart', handleClickOutside);\n    };\n  }, [wrapperRef]);\n\n  return (\n    <InstantSearch\n      searchClient={searchClient}\n      indexName=\"taitocli\"\n      root={{ Root: SearchWrapper, props: { ref: wrapperRef } }}\n      onSearchStateChange={({ query }) => setQuery(query)}\n    >\n      <SearchInput onFocus={() => setFocused(true)} />\n\n      {focused && !!query && (\n        <HitWrapper>\n          <HitResults>\n            <Hits hitComponent={SearchHit} />\n          </HitResults>\n\n          <PoweredBy>\n            Powered by\n            <Gutter amount={4} />\n            <FaAlgolia size={16} />\n            <Gutter amount={4} />\n            <a href=\"https://www.algolia.com\">Algolia</a>\n          </PoweredBy>\n        </HitWrapper>\n      )}\n    </InstantSearch>\n  );\n};\n\nconst HitResults = connectStateResults(\n  ({ searchState: state, searchResults: res, children }) =>\n    res && res.nbHits ? children : `No results for ${state.query}`\n);\n\nconst SearchWrapper = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n\n  ${media.sm`\n    width: 100%;\n  `}\n`;\n\nconst HitWrapper = styled.div`\n  position: absolute;\n  top: 36px;\n  right: 0px;\n  width: 400px;\n  max-height: 400px;\n  overflow-y: auto;\n  background-color: #fff;\n  border-radius: 4px;\n  padding: 12px;\n  border: 4px solid #fff;\n  box-shadow: 0px 4px 24px rgba(0, 0, 0, 0.4);\n\n  ${media.sm`\n    top: 48px;\n    width: 100%;\n    max-height: calc(80vh - 56px);\n  `}\n\n  ul {\n    list-style: none !important;\n    padding: 0 !important;\n    margin: 0 !important;\n\n    li {\n      margin-bottom: 8px;\n    }\n  }\n`;\n\nconst PoweredBy = styled.div`\n  font-size: 12px;\n  color: #222;\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  width: 100%;\n`;\n\nexport default Search;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport { Link } from 'gatsby';\nimport { FaGithub } from 'react-icons/fa';\n\nimport { desktopOnly } from '../utils';\nimport theme from '../theme';\nimport Gutter from './Gutter';\nimport Search from './search';\n\nconst Navbar = () => {\n  const activeStyle = {\n    fontWeight: 500,\n    borderColor: theme.primary[500],\n  };\n\n  return (\n    <Nav>\n      <NavLinks>\n        <NavLink to=\"/\">\n          <strong>Taito</strong>&nbsp;CLI\n        </NavLink>\n\n        <Gutter amount={64} />\n\n        <NavLink to=\"/docs\" activeStyle={activeStyle} partiallyActive>\n          Docs\n        </NavLink>\n\n        <Gutter amount={32} />\n\n        <NavLink to=\"/tutorial\" activeStyle={activeStyle} partiallyActive>\n          Tutorial\n        </NavLink>\n\n        <Gutter amount={32} />\n\n        <NavLink to=\"/plugins\" activeStyle={activeStyle}>\n          Plugins\n        </NavLink>\n\n        <Gutter amount={32} />\n\n        <NavLink to=\"/templates\" activeStyle={activeStyle}>\n          Templates\n        </NavLink>\n\n        <Gutter amount={32} />\n\n        <NavLink to=\"/extensions\" activeStyle={activeStyle}>\n          Extensions\n        </NavLink>\n\n        <div style={{ flex: 1 }} />\n\n        <Search />\n\n        <Gutter />\n\n        <a\n          href=\"https://github.com/TaitoUnited/taito-cli\"\n          target=\"__blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <FaGithub color=\"#fff\" size={24} />\n        </a>\n      </NavLinks>\n    </Nav>\n  );\n};\n\nconst Nav = styled.nav`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  background-color: ${props => props.theme.primary[700]};\n  z-index: 1;\n  ${desktopOnly}\n`;\n\nconst NavLinks = styled.nav`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding: 0px 16px;\n`;\n\nconst NavLink = styled(Link)`\n  height: 50px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-decoration: none;\n  color: #fff;\n  border-bottom: 4px solid ${props => props.theme.primary[700]};\n  position: relative;\n  &:hover {\n    border-bottom: 4px solid ${props => props.theme.primary[900]};\n  }\n`;\n\nexport default Navbar;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport { mobileOnly } from '../utils';\nimport Navbar from './Navbar';\nimport Drawer from './Drawer';\nimport Search from './search';\n\nconst Navigation = ({ isHome }) => (\n  <>\n    <Navbar />\n\n    <MobileSearch transparent={!!isHome}>\n      <Search />\n    </MobileSearch>\n\n    <Drawer>\n      <Drawer.Item to=\"/\">Home</Drawer.Item>\n      <Drawer.Item to=\"/docs\">Docs</Drawer.Item>\n      <Drawer.Item to=\"/tutorial\">Tutorial</Drawer.Item>\n      <Drawer.Item to=\"/plugins\">Plugins</Drawer.Item>\n      <Drawer.Item to=\"/templates\">Templates</Drawer.Item>\n      <Drawer.Item to=\"/extensions\">Extensions</Drawer.Item>\n    </Drawer>\n  </>\n);\n\nconst MobileSearch = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  height: 64px;\n  display: flex;\n  align-items: center;\n  padding: 0px 64px 0px 16px;\n  background-color: ${props => props.transparent ? 'transparent' : '#fff'};\n  ${mobileOnly}\n`;\n\nexport default Navigation;\n","module.exports = __webpack_public_path__ + \"static/taito_char_white-783c34656af678af680d43f15b54afb3.png\";"],"sourceRoot":""}