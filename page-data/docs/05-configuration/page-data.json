{"componentChunkName":"component---src-templates-doc-js","path":"/docs/05-configuration/","webpackCompilationHash":"54f7a9299e23db9fe61d","result":{"data":{"doc":{"id":"04f76315-d11a-523b-9238-3c3f4162b776","html":"<h2 id=\"5-configuration\"><a href=\"#5-configuration\" aria-label=\"5 configuration permalink\" class=\"autolink-a\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5. Configuration</h2>\n<blockquote>\n<p>TODO: separate chapters for project template settings, and tips for setting up proxies and version control commands.</p>\n</blockquote>\n<p>By default only the <em>basic</em> plugin is enabled. You can configure your default settings in <code class=\"language-text\">~/.taito/taito-config.sh</code> file and organization specific overrides in <code class=\"language-text\">~/.taito/taito-config-ORGANIZATION.sh</code> file.</p>\n<p>Project specific settings are defined in <code class=\"language-text\">taito-config.sh</code> file placed at your project root folder. See <a href=\"https://github.com/TaitoUnited/full-stack-template/blob/master/taito-config.sh\">taito-config.sh</a> of full-stack-template as an example.</p>\n<p>Settings are defined as environment variables. If an environment variable contains multiple values, just write them using whitespace as delimiter, for example:</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token assign-left variable\">taito_environments</span><span class=\"token operator\">=</span><span class=\"token string\">\"dev test canary prod\"</span></code></pre></div>\n<p>TIP: You can easily use project specific <code class=\"language-text\">taito-config.sh</code> settings in your own custom scripts even without Taito CLI. For example <a href=\"https://github.com/TaitoUnited/react-native-template/blob/dev/scripts/appcenter/post-build.sh#L9\">post-build.sh</a> script of react-native-template uses taito-config.sh settings to send Slack notification after App Center build has ended:</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\"># Read settings from taito-config.sh</span>\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">taito_target_env</span><span class=\"token operator\">=</span><span class=\"token variable\">${APPCENTER_BRANCH<span class=\"token operator\">/</span>master<span class=\"token operator\">/</span>prod}</span>\n<span class=\"token builtin class-name\">.</span> taito-config.sh</code></pre></div>\n<h3 id=\"configuration-overrides\"><a href=\"#configuration-overrides\" aria-label=\"configuration overrides permalink\" class=\"autolink-a\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Configuration overrides</h3>\n<p>User specific overrides may be defined in <code class=\"language-text\">taito-user-config.sh</code> file located at project root folder. In this file you can define additional variables or override any variables set in <code class=\"language-text\">taito-config.sh</code> The user specific file should not be committed to version control.</p>\n<p>The <a href=\"https://github.com/TaitoUnited/full-stack-template\">full-stack-template</a> also supports <code class=\"language-text\">TAITO_CONFIG_OVERRIDE</code> environment variable. With the <code class=\"language-text\">TAITO_CONFIG_OVERRIDE</code> environment variable you may define path to an additional configuration overrides file. These overrides will be included to the configurations just before provider specific settings. The file may be either local file (e.g. <code class=\"language-text\">./my-overrides.sh</code>) or reside remotely (e.g. <code class=\"language-text\">https://mydomain.com/configs/my-overrides.sh</code>). The <code class=\"language-text\">TAITO_CONFIG_OVERRIDE</code> setting is useful in some CI/CD scenarios (e.g. the same git branch is automatically deployed to multiple environments).</p>\n<h3 id=\"common-settings-in-default-or-additional-configuration-file\"><a href=\"#common-settings-in-default-or-additional-configuration-file\" aria-label=\"common settings in default or additional configuration file permalink\" class=\"autolink-a\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Common settings in default or additional configuration file</h3>\n<p>The following settings are shared among plugins. All of them are optional.</p>\n<ul>\n<li><strong>taito_image:</strong> Taito CLI Docker image that is used for running the taito commands. The default value is <code class=\"language-text\">taitounited/taito-cli:cli</code>.</li>\n<li><strong>taito_zone:</strong> The default taito zone. You can usually leave this empty.</li>\n<li><strong>taito_global_extensions:</strong> Globally enabled Taito CLI extensions. You can reference an extension by using a local file path, git repository path or an url to a <strong>tar.gz</strong> archive. TODO example values.</li>\n<li><strong>taito_global_plugins:</strong> Globally enabled Taito CLI plugins.</li>\n</ul>\n<p><a href=\"https://github.com/TaitoUnited/taito-cli/blob/dev/docs/plugins\">Plugins</a> named with a <code class=\"language-text\">-global</code> suffix are designed to be used globally. That is, you configure them in your default or additional configuration file.</p>\n<h3 id=\"template-settings-in-default-or-additional-configuration-file\"><a href=\"#template-settings-in-default-or-additional-configuration-file\" aria-label=\"template settings in default or additional configuration file permalink\" class=\"autolink-a\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Template settings in default or additional configuration file</h3>\n<p>TODO: In template plugin README.md (template_default_ci_exec_deploy false for security critical environments, etc.)</p>\n<h3 id=\"common-settings-in-project-specific-configuration-file\"><a href=\"#common-settings-in-project-specific-configuration-file\" aria-label=\"common settings in project specific configuration file permalink\" class=\"autolink-a\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Common settings in project specific configuration file</h3>\n<p>The following settings are shared among plugins. All of them are optional.</p>\n<p>Basic settings:</p>\n<ul>\n<li><strong>taito_image:</strong> Taito CLI Docker image that is used for running the taito commands. The default value is <code class=\"language-text\">taitounited/taito-cli:cli</code>.</li>\n<li><strong>taito_version:</strong> Version of the taito configuration file syntax. It is used to provide backwards compatibility in case Taito CLI implementation is changed. The current version is <code class=\"language-text\">1</code>.</li>\n<li><strong>taito_extensions:</strong> Enabled Taito CLI extensions. You can reference an extension using a local file path (relative to the project root directory), git repository path or an url to a <strong>tar.gz</strong> archive. TODO example values.</li>\n<li><strong>taito_plugins:</strong> Enabled Taito CLI plugins.</li>\n</ul>\n<p>Project labeling:</p>\n<ul>\n<li><strong>taito_organization:</strong> Name of the organization that is hosting the project.</li>\n<li><strong>taito_organization_abbr:</strong> Organization name abbreviation.</li>\n<li><strong>taito_project:</strong> Name of the project.</li>\n<li><strong>taito_random_name:</strong> Random name for the project. Use this when real project name cannot be used.</li>\n<li><strong>taito_company:</strong> Company of the project (customer company).</li>\n<li><strong>taito_family:</strong> Product family name of the project (you can usually leave this empty)</li>\n<li><strong>taito_application:</strong> Application name.</li>\n<li><strong>taito_suffix:</strong> Additional suffix, for example <code class=\"language-text\">api</code> (you can usually leave this empty)</li>\n</ul>\n<p>Assets:</p>\n<ul>\n<li><strong>taito_project_icon:</strong> Icon URL that can be used for example in Slack notifications sent by CI/CD.</li>\n</ul>\n<p>Environments:</p>\n<ul>\n<li><strong>taito_environments:</strong> Environments (e.g <code class=\"language-text\">dev</code>, <code class=\"language-text\">test</code>, <code class=\"language-text\">uat</code>, <code class=\"language-text\">stag</code>, <code class=\"language-text\">canary</code>, <code class=\"language-text\">prod</code>). You can also define feature environments using <code class=\"language-text\">f-</code> as prefix (e.g. <code class=\"language-text\">f-create-user</code>).</li>\n</ul>\n<p>URLs:</p>\n<ul>\n<li><strong>taito_domain:</strong> Domain name for your application. For example <code class=\"language-text\">my-project-dev.mydomain.com</code>.</li>\n<li><strong>taito_app_url:</strong> URL of the application web user interface. For example <code class=\"language-text\">https://my-project-dev.mydomain.com</code>.</li>\n<li><strong>taito_admin_url:</strong> URL of the administration web user interface. For example <code class=\"language-text\">https://my-project-dev.mydomain.com/admin/</code>.</li>\n<li><strong>taito_static_url:</strong> Public base URL for static assets, if static assets are published to another location than the application domain. For example <code class=\"language-text\">https://cdn-dev.mydomain.com/my-project-dev/</code>.</li>\n</ul>\n<p>Provider and namespaces:</p>\n<ul>\n<li><strong>taito_provider:</strong> Provider (e.g. <code class=\"language-text\">aws</code>, <code class=\"language-text\">azure</code>, <code class=\"language-text\">gcp</code>, <code class=\"language-text\">onpremise</code>).</li>\n<li><strong>taito_provider_region:</strong> Region of the provider.</li>\n<li><strong>taito_provider_zone:</strong> Zone of the provider.</li>\n<li><strong>taito_zone:</strong> Taito zone that contains the clusters/services that your application is deployed on. TODO explain taito zone.</li>\n<li><strong>taito_namespace:</strong> Namespace for the project (For example a Kubernetes namespace).</li>\n<li><strong>taito_resource_namespace:</strong> Namespace for additional project specific resources (e.g. AWS, Azure or Google Cloud project name).</li>\n</ul>\n<p>Repositories:</p>\n<ul>\n<li><strong>taito_vc_repository:</strong> Version control repository name (e.g. git repository name).</li>\n<li><strong>taito_container_registry:</strong> Docker container image registry.</li>\n</ul>\n<p>Stack:</p>\n<ul>\n<li><strong>taito_targets:</strong> For example <code class=\"language-text\">&quot;client server database storage&quot;</code>.</li>\n<li><strong>taito_build_targets:</strong> Targets for the <code class=\"language-text\">taito build[:BUILD_TARGET]</code> command. By default <strong>taito_targets</strong> are used as <strong>taito_build_targets</strong>.</li>\n<li><strong>taito_storages:</strong> For example <code class=\"language-text\">&quot;my-project-dev&quot;</code>.</li>\n<li><strong>taito_networks:</strong> Networks defined in your <code class=\"language-text\">docker-compose.yaml</code>. Usually just <code class=\"language-text\">&quot;default&quot;</code>.</li>\n</ul>\n<p>Stack types:</p>\n<p>TODO</p>\n<p>Database settings:</p>\n<ul>\n<li><strong>db_NAME_instance:</strong> Database instance (e.g. database cluster name).</li>\n<li><strong>db_NAME_type:</strong> Database type (e.g. <code class=\"language-text\">pg</code>, <code class=\"language-text\">mysql</code>).</li>\n<li><strong>db_NAME_host:</strong> Database host</li>\n<li><strong>db_NAME_port:</strong> Database port</li>\n<li><strong>db_NAME_proxy_port:</strong> Database proxy port</li>\n<li><strong>db_NAME_user:</strong> Database user</li>\n<li><strong>db_NAME_password:</strong> Database password</li>\n</ul>\n<p>Messaging:</p>\n<ul>\n<li><strong>taito_messaging_provider:</strong> Messaging app used for notifications (e.g. <code class=\"language-text\">slack</code>).</li>\n<li><strong>taito_messaging_webhook:</strong> Webhook for sending messaging notifications.</li>\n<li><strong>taito_messaging_channel:</strong> Messaging channel used for project discussion.</li>\n<li><strong>taito_messaging_builds_channel:</strong> Messaging channel used for monitoring builds. Default value: '#builds'.</li>\n<li><strong>taito_messaging_critical_channel:</strong> Messaging channel used for critical alerts. Default value: '#critical'.</li>\n<li><strong>taito_messaging_monitoring_channel:</strong> Messaging channel used for monitoring apps. Default value: '#monitoring'.</li>\n</ul>\n<p>Uptime monitoring:</p>\n<ul>\n<li><strong>taito_uptime_provider:</strong></li>\n<li><strong>taito_uptime_targets:</strong> Targets to be monitored, for example <code class=\"language-text\">admin client server</code>.</li>\n<li><strong>taito_uptime_paths:</strong> Public paths to be monitored, for example <code class=\"language-text\">/admin/uptimez /uptimez /api/uptimez</code>.</li>\n<li><strong>taito_uptime_timeouts:</strong> Monitoring timeouts, for example <code class=\"language-text\">2s 2s 5s</code>.</li>\n<li><strong>taito_uptime_channels:</strong> Monitoring channels, for example <code class=\"language-text\">projects/myproject/notificationChannels/1234567890</code>.</li>\n</ul>\n<p>Continuos integration settings:</p>\n<ul>\n<li><strong>ci_exec_build:</strong> Build a container if it does not exist already (true/false).</li>\n<li><strong>ci_exec_deploy:</strong> Deploy automatically (true/false).</li>\n<li><strong>ci_exec_test:</strong> Execute test suites after deploy (true/false).</li>\n<li><strong>ci_exec_test_init:</strong> Run 'init --clean' before each test suite (true/false).</li>\n<li><strong>ci_exec_revert:</strong> Revert deploy automatically on fail (true/false).</li>\n<li><strong>ci_static_assets_location:</strong> Location where the static assets should be published (e.g. storage bucket).</li>\n</ul>\n<h3 id=\"plugin-specific-settings\"><a href=\"#plugin-specific-settings\" aria-label=\"plugin specific settings permalink\" class=\"autolink-a\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Plugin specific settings</h3>\n<p>Plugin specific settings are prefixed with the plugin name and documented in README.md file of <a href=\"https://github.com/TaitoUnited/taito-cli/blob/dev/docs/plugins\">each plugin</a>.</p>\n<p><em>TODO: Write README.md for each plugin.</em></p>\n<h3 id=\"environment-specific-project-settings\"><a href=\"#environment-specific-project-settings\" aria-label=\"environment specific project settings permalink\" class=\"autolink-a\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Environment specific project settings</h3>\n<p>You can use bash script constructs to define different values for different environments, for example:</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\"># Overrides for different environments</span>\n<span class=\"token keyword\">case</span> <span class=\"token variable\">$taito_env</span> <span class=\"token keyword\">in</span>\n  prod<span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># settings for production</span>\n    <span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n  stag<span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># settings for staging</span>\n    <span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n  <span class=\"token builtin class-name\">test</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># settings for testing</span>\n    <span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n  dev<span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># settings for development</span>\n    <span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n  <span class=\"token builtin class-name\">local</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># settings for local</span>\n    <span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">esac</span></code></pre></div>\n<h3 id=\"feature-environments\"><a href=\"#feature-environments\" aria-label=\"feature environments permalink\" class=\"autolink-a\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Feature environments</h3>\n<blockquote>\n<p>TODO: feature environment support is still work-in-progress</p>\n</blockquote>\n<p>You can also create an environment for your your feature branch. See the example below for <code class=\"language-text\">feat/orders</code>.</p>\n<ol>\n<li>\n<p>Configure <code class=\"language-text\">f-orders</code> environment in <code class=\"language-text\">taito-config.sh</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\"># Environments</span>\n<span class=\"token assign-left variable\">taito_environments</span><span class=\"token operator\">=</span><span class=\"token string\">\"f-orders dev test prod\"</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\"># Overrides for different environments</span>\n<span class=\"token keyword\">case</span> <span class=\"token variable\">$taito_env</span> <span class=\"token keyword\">in</span>\n <span class=\"token punctuation\">..</span>.\n <span class=\"token punctuation\">..</span>.\n dev<span class=\"token operator\">|</span>f-orders<span class=\"token punctuation\">)</span>\n   <span class=\"token comment\"># settings for dev and feat/orders</span>\n   <span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n <span class=\"token punctuation\">..</span>.\n <span class=\"token punctuation\">..</span>.\n<span class=\"token keyword\">esac</span></code></pre></div>\n</li>\n<li>Create the environment by running <code class=\"language-text\">taito env apply:f-orders</code>.</li>\n<li>Push some changes to <code class=\"language-text\">feat/orders</code> branch and your application should be deployed automatically.</li>\n</ol>\n<h3 id=\"canary-environment\"><a href=\"#canary-environment\" aria-label=\"canary environment permalink\" class=\"autolink-a\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Canary environment</h3>\n<p>You can create a <strong>canary environment</strong> by renaming <code class=\"language-text\">canary</code> environment to <code class=\"language-text\">prod</code> at the beginning of the project specific configuration file (see the example below). This means that the canary release is deployed to the same cluster and namespace as production, and it also uses all the same resources as production (database, storage, 3rd party services).</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\"># Environments</span>\n<span class=\"token assign-left variable\">taito_env</span><span class=\"token operator\">=</span><span class=\"token variable\">${taito_env<span class=\"token operator\">/</span>canary<span class=\"token operator\">/</span>prod}</span> <span class=\"token comment\"># canary -> prod</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\"># Overrides for different environments</span>\n<span class=\"token keyword\">case</span> <span class=\"token variable\">$taito_env</span> <span class=\"token keyword\">in</span>\n  prod<span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># settings for production</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span> <span class=\"token variable\">$taito_target_env</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"canary\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n      <span class=\"token comment\"># settings for canary</span>\n    <span class=\"token keyword\">fi</span>\n    <span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n  stag<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">..</span>.\n    <span class=\"token punctuation\">..</span>.\n<span class=\"token keyword\">esac</span></code></pre></div>\n<h3 id=\"alternative-environments\"><a href=\"#alternative-environments\" aria-label=\"alternative environments permalink\" class=\"autolink-a\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Alternative environments</h3>\n<p>You can make an alternative environment for A/B testing the same way that you do with canary. In the following example the <code class=\"language-text\">feat/orders-b</code> uses resources of production environment. Thus, you can do A/B testing in production by routing some of the users to the <code class=\"language-text\">feat/orders-b</code> release that is running side-by-side with the production version.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\"># Environments</span>\n<span class=\"token assign-left variable\">taito_env</span><span class=\"token operator\">=</span><span class=\"token variable\">${taito_env<span class=\"token operator\">/</span>f-orders-b<span class=\"token operator\">/</span>prod}</span> <span class=\"token comment\"># f-orders-b -> prod</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\"># Overrides for different environments</span>\n<span class=\"token keyword\">case</span> <span class=\"token variable\">$taito_env</span> <span class=\"token keyword\">in</span>\n  prod<span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># settings for production</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span> <span class=\"token variable\">$taito_target_env</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"f-orders-b\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n      <span class=\"token comment\"># settings for feat/orders-b</span>\n    <span class=\"token keyword\">fi</span>\n    <span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n  stag<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">..</span>.\n    <span class=\"token punctuation\">..</span>.\n<span class=\"token keyword\">esac</span></code></pre></div>\n<h3 id=\"test-suite-parameters\"><a href=\"#test-suite-parameters\" aria-label=\"test suite parameters permalink\" class=\"autolink-a\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Test suite parameters</h3>\n<p>You can define parameters for your e2e and integration test suites by using <code class=\"language-text\">test_TARGET_</code> as prefix. See the <a href=\"https://github.com/TaitoUnited/full-stack-template/blob/master/taito-config.sh\">taito-config.sh</a> file of full-stack-template as an example.</p>\n<h3 id=\"secret-management\"><a href=\"#secret-management\" aria-label=\"secret management permalink\" class=\"autolink-a\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Secret management</h3>\n<p>Plugins require secrets to perform some of the operations. Secrets are configured in <code class=\"language-text\">taito-config.sh</code> using the <code class=\"language-text\">taito_secrets</code> variable and secret values can be managed with the <code class=\"language-text\">taito env apply:ENV</code> and <code class=\"language-text\">taito secret rotate:ENV</code> commands. See <a href=\"https://github.com/TaitoUnited/full-stack-template/blob/master/taito-config.sh\">taito-config.sh</a> of full-stack-template for examples.</p>\n<blockquote>\n<p>TIP: You can also use <code class=\"language-text\">taito_remote_secrets</code> and <code class=\"language-text\">taito_local_secrets</code> in addition to <code class=\"language-text\">taito_secrets</code> if some of the secrets should be defined for remote or local environments only.</p>\n</blockquote>\n<p>Secret naming convention is <strong>name.property[/namespace]:method</strong>. You should avoid undescores in secret names as they are not valid in Kubernetes. For example:</p>\n<ul>\n<li><em>silicon-valley-prod-basic-auth.auth:htpasswd</em>: User credentials for basic authentication. Use <code class=\"language-text\">htpasswd-plain</code> instead of <code class=\"language-text\">htpasswd</code> if you want to store the passwords in plain text (e.g. for development purposes).</li>\n<li><em>silicon-valley-prod-twilio.apikey:manual</em>: API key for external Twilio service for sending sms messages. The token is asked from user during the environment creation and secret rotation process.</li>\n<li><em>silicon</em>valley<em>prod-db-app.password:random</em>: A randomly generated database password for silicon valley production database (named silicon<em>valley</em>prod) to be used by application.</li>\n<li><em>silicon</em>valley<em>prod-db-mgr.password/devops:random</em>: A randomly generated database password for silicon valley production database (named silicon<em>valley</em>prod) to be in managing the database (for CI/CD, etc). It is saved to devops namespace as it is not required by the application.</li>\n<li><em>cloudsql-gserviceaccount.key:copy/devops</em>: A token for external google-cloudsql service that acts as a database proxy. Token is copied from devops namespace to this one.</li>\n<li><em>version-control-buildbot.token:read/devops</em>: A token to access version control (e.g. GitHub) when making a release. Token is read from devops namespace, but need not be saved as it is only needed by CI/CD during build.</li>\n</ul>\n<p>You can use the following methods in your secret definition:</p>\n<ul>\n<li><code class=\"language-text\">random</code>: Randomly generated string (30 characters).</li>\n<li><code class=\"language-text\">random-N</code>: Randomly generated string (N characters).</li>\n<li><code class=\"language-text\">random-words</code>: Randomly generated words (6 words).</li>\n<li><code class=\"language-text\">random-words-N</code>: Randomly generated words (N words).</li>\n<li><code class=\"language-text\">random-uuid</code>: Randomly generated UUID.</li>\n<li><code class=\"language-text\">manual</code>: Manually entered string (min 8 characters).</li>\n<li><code class=\"language-text\">manual-N</code>: Manually entered string (min N characters).</li>\n<li><code class=\"language-text\">file</code>: File. The file path is entered manually.</li>\n<li><code class=\"language-text\">template-NAME</code>: File generated from a template by substituting environment variables and secrets values.</li>\n<li><code class=\"language-text\">htpasswd</code>: htpasswd file that contains 1-N user credentials. User credentials are entered manually.</li>\n<li><code class=\"language-text\">htpasswd-plain</code>: htpasswd file that contains 1-N user credentials. Passwords are stored in plain text. User credentials are entered manually.</li>\n<li><code class=\"language-text\">csrkey</code>: Secret key generated for certificate signing request (CSR).</li>\n</ul>\n<p>See the <a href=\"https://github.com/TaitoUnited/taito-cli/blob/dev/docs/plugins.md#secret-management\">secret management</a> section of the plugins page for more information. <a href=\"https://taitounited.github.io/taito-cli/tutorial/06-env-variables-and-secrets#64-define-a-secret\">6.4. Define a secret</a> chapter of Taito CLI tutorial may also be useful.</p>\n<hr>\n<p><strong>Next:</strong> <a href=\"/taito-cli/docs/06-continuous-integration-and-delivery\">6. Continuous integration and delivery</a></p>"},"menu":{"edges":[{"node":{"id":"f400bc83-9ebc-5d6d-9250-c7a634369bef","headings":[{"value":"1. Introduction"}],"fields":{"slug":"/docs/01-introduction/"}}},{"node":{"id":"9d05f935-d824-5ab8-b96c-babf2c8922df","headings":[{"value":"2. Installation and upgrade"}],"fields":{"slug":"/docs/02-installation/"}}},{"node":{"id":"6fb3b66e-a3e1-5ed7-ae54-fc8b33df41e8","headings":[{"value":"3. Quick start"}],"fields":{"slug":"/docs/03-quick-start/"}}},{"node":{"id":"041224e2-88ee-50c0-a7b5-0ae314fc3ea8","headings":[{"value":"4. Usage"}],"fields":{"slug":"/docs/04-usage/"}}},{"node":{"id":"04f76315-d11a-523b-9238-3c3f4162b776","headings":[{"value":"5. Configuration"}],"fields":{"slug":"/docs/05-configuration/"}}},{"node":{"id":"baaa9cea-7557-5d89-ad83-25d234345dd1","headings":[{"value":"6. Continuous integration and delivery"}],"fields":{"slug":"/docs/06-continuous-integration-and-delivery/"}}},{"node":{"id":"2a328525-4733-5f6b-acc4-4b0f387d4c1a","headings":[{"value":"7. Infrastructure management"},{"value":"Creating a zone"}],"fields":{"slug":"/docs/07-infrastructure-management/"}}},{"node":{"id":"dcbd0c2a-ed28-5cc5-a6ff-867d1630692a","headings":[{"value":"8. ChatOps"}],"fields":{"slug":"/docs/08-chatops/"}}},{"node":{"id":"f70c271d-23f5-5b80-afc9-54877ce7f1a8","headings":[{"value":"9. Custom commands"}],"fields":{"slug":"/docs/09-custom-commands/"}}},{"node":{"id":"b1c65647-6969-5cfd-939f-c879a29cb7d2","headings":[{"value":"10. Custom plugins"}],"fields":{"slug":"/docs/10-custom-plugins/"}}},{"node":{"id":"53cb6168-f232-5b22-a7a2-0c3e398f2bfe","headings":[{"value":"11. Custom project templates"}],"fields":{"slug":"/docs/11-custom-project-templates/"}}},{"node":{"id":"ca612711-1911-5eae-82ec-e05a5174ec48","headings":[{"value":"12. Taito CLI development"}],"fields":{"slug":"/docs/12-taito-cli-development/"}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"04f76315-d11a-523b-9238-3c3f4162b776"}}}