TAITO CLI TROUBLESHOOTING

  TLDR
  ----

  These resolve most problems:
    - Restart Docker or the whole operating system.
    - Upgrade and reinitialize Taito CLI with "taito upgrade".

  General
  -------

  Common tips for any problem
    Restarting Docker or the whole operating system often resolves many
    problems - at least on non-Linux systems. You should also try to upgrade
    Taito CLI to the latest version with "taito upgrade". This also
    reinitializes Taito CLI docker image in case you had removed it from
    docker. You can use taito trouble or taito help to solve many problems:
    "taito trouble", "taito -h", "taito db -h", etc. You can also run a
    problematic taito command with the verbose "-v" flag to see the commands
    that plugins run during command execution. If you want to see even more
    output, use the "--debug" flag. For example: taito --debug db connect:dev

  "Unknown command"
    Did you execute the command in a project directory that contains
    taito-config.sh? Did you give the correct environment as argument? Commands
    always use the local environment by default. Check your plugin configuration
    in your taito-config.sh files. Perhaps some plugins are not enabled.

  Local development
  -----------------

  "bind source path does not exist: /my-project/secrets/local/..."
    You are missing a secret. Create the secret with "taito secret rotate NAME"
    or just clean everything with "taito develop".

  "rm: cannot remove ...: Permission denied"
    The file or directory has been created by docker and therefore is owned
    by root. Remove the file/directory from disk using sudo.

  Application does not work locally
    - Try clean start by running "taito develop". If the develop command fails
      with Docker Compose read timeout error, stop it with ctrl+c, start it
      again with "taito start", and then run "taito init"
    - Try cleaning your local workspace by running "taito workspace kill" and
      "taito workspace clean"

  "revert/FILE.sql: No such file or directory"
    You have removed an existing database migration. The migration cannot be
    reverted from you database without revert/FILE.sql that instructs Sqitch
    how to revert it. Put the revert/FILE.sql file back and try again.

  Docker issues on non-Linux systems (macOS, Windows)
  ---------------------------------------------------

  "permission denied" related to corrupted file permissions
    The new VirtioFS file sharing implementation currently has some issues
    with file permissions on newly created files. Switch back to gRPC FUSE
    and fix invalid file permissions of the newly created files. Reference:
    https://github.com/docker/for-mac/issues/6614#issuecomment-1720189733

  An error related to "qemu"
    Are you running the command on a Apple Silicon (M1) mac? You can try
    to change between amd64 and arm64 images with `taito --amd64 upgrade`
    and `taito --arm64 upgrade`.

  Taito CLI immediately freezes before displaying anything or your application
  hangs on "taito develop" or "taito start"
    Your Docker daemon is probably stuck. First try restarting your Docker
    daemon. Rebooting your computer might also help. If the problem persists,
    try to run "Clean / Purge data" or "Reset to factory default" from Docker
    preferences. Remember to adjust your Docker resource limits (cpu/memory)
    after the factory reset.

  "Cannot create container for service ...: not a directory "
    This error occurs sometimes on WSL. Rebooting your computer usually
    resolves the issue.

  "Error response from daemon: failed to create shim task: OCI runtime ..."
    This error occurs sometimes on WSL. Rebooting your computer may resolve the
    issue. Check also that secrets mounted on docker-compose.yaml are not owned
    by root (usually located under ./secrets). If they are, remove them and set
    them with `taito secret rotate`.

  Read timeout on "taito develop" or "taito start --clean"
    If the develop command fails with Docker Compose read timeout error, stop it
    with ctrl+c, start it again with "taito start", and then run "taito init".
    For more info, see https://github.com/docker/compose/issues/3927

  Strange Docker problems
    Try to reset docker to factory defaults or just clean it by running
    "taito workspace clean". Adjust your Docker resource limits.

  "No space left on device"
    Try cleaning your local workspace by running "taito workspace clean". You
    can also try to enlarge the docker virtual disk in your docker preferences.
    Also check that you have free disk space available on your computer.

  "docker: invalid reference format"
    You are probably executing Taito CLI command in a folder that docker is not
    allowed to read. Note that docker does not have permissions to ~/Documents
    and ~/Downloads by default on macOS.

  Docker issues on Linux systems
  -------------------------------

  Some local library directories are owned by root (e.g. node_modules)
    You probably have run "taito start" before installing libraries with
    "taito env apply", and library directory Docker mounts have failed because
    of a missing directory. This problem seems to occur only on Linux.
    Delete the root-owned directories with sudo and then start development with
    "taito develop".

  CI/CD
  -----

  CI/CD build fails but everything works locally
    See build logs by running "taito open builds" and fix the problem. If there
    is no apparent reason why the build failed, just try to retry the CI/CD
    build. If it fails again, try to build production build locally by running
    "taito start --clean --prod" and then try to fix the build problem.

  Cloud provider authentication fails on CI/CD
    The cloud provider secret keys might be expired. Try to renew them in your
    CI/CD settings. Running 'taito env apply:ENV' might help you in the renewal
    process.

  Remote environments (Kubernetes / Cloud)
  ----------------------------------------

  Startup stuck on "ContainerCreating"
    Most likely cause is a volume mount fail because of a missing secret
    value. Run "taito logs:TARGET:ENV" for more information. Make sure you have
    set values for all of the secrets you have defined for your container
    (usually in scripts/helm.yaml). You can see all secrets values with
    "taito secret show:ENV" and you can set secret value with
    "taito secret rotate:ENV NAME".

  My application does not work on a remote environment or it continuously
  crashes/restarts
    Health check (liveness probe) is probably failing, or perhaps your
    implementation crashes on start. You can investigate the problem with
    commands "taito status:ENV", "taito logs:TARGET:ENV" and
    "taito open logs:ENV". If you cannot figure out a reason, try to kill the
    container with "taito kill:TARGET:ENV" to see if it helps.

  "502 Bad Gateway"
    Check application status with "taito status:ENV" and
    "taito logs:TARGET:ENV" commands, and fix the problem. If everything
    seems fine, check ingress logs. Perhaps you have not set basic auth secrets
    required by ingress.

  Connection or authorization error
    If you run into a connection or authorization error during Taito CLI
    command execution, the command probably requires authentication and you
    either have not authenticated or your authentication has expired. In such
    case, run "taito auth:ENV" or "taito auth:ENV reset" to authenticate.

  "No configuration has been provided"
    The command probably requires authentication and you either have not
    authenticated or your authentication has expired. In such case, run
    "taito auth:ENV" or "taito auth:ENV reset" to authenticate.

  "Token has expired"
    Try to reauthenticated with "taito auth:ENV --reset". On WSL this may also
    be caused by clock not being in sync. In such case rebooting computer usually
    resolves the issue.

  SSL certificates (cert-manager)
  -------------------------------

  "Invalid SSL certificate (NET::ERR_CERT_AUTHORITY_INVALID)"
    Perhaps SSL certificate has not yet been created. Try again a little later.
    If the problem persists, check cert-manager and ingress-nginx logs. Perhaps
    SSL certificate processing has failed for some reason.

  Automatic certificate renewal does not work
    First initialize Taito CLI context by running "taito auth:ENV" and then
    start shell with "taito shell". Check if you have cert-manager acme solver
    running with "kubectl get all | grep cm-acme-http-solver". The
    following steps might resolve the problem:
    1) Make backup of the ssl secret with
       "kubectl get secret my-project-ENV-ssl -o yaml > ssl-secret.bak".
    2) Delete the secret with "kubectl delete secret my-project-ENV-ssl".
    3) Wait for couple of minutes for cert-manager to renew the certificate.
       If renewal fails, continue to steps 4 and 5.
    4) Delete the acme solver pod with "kubectl delete pod cm-acme-http-solver-X"
    5) Delete also other acme solver resources with "kubectl delete TYPE NAME"
